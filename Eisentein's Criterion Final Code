import math

#function finding gcd of 2 no.
def find_gcd(x, y):
    while(y):
        x, y = y, x % y
  
    return x
      
      
      
#function for finding highest prime factor of gcd
def maxPrimeFactors (n):
    maxPrime = -1
    while n % 2 == 0:
        maxPrime = 2
        n >>= 1
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        while n % i == 0:

            maxPrime = i
            n = n / i

    if n > 2:
        maxPrime = n
      
    return int(maxPrime)

      
l = [8,14,7,35,-70]
  
num1=l[1]
num2=l[2]
gcd=find_gcd(num1,num2)

#to find the gcd of list 
for i in range(3,len(l)-1):
    gcd=find_gcd(gcd,l[i])

p=maxPrimeFactors(gcd)

#checking condition

if(l[0]%p!=0 and l[len(l)-1]%(p*p)!=0):
    print('The given polynomial is irreducible by Eisentein Criteria.' )
else:
    print('The given polynomial is reducible by Eisentein Criteria.' )
